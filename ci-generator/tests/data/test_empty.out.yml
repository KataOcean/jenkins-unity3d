# !!! Do not edit this file manually, see ci-generator folder !!!
test-ci-generator:
  image: python:3.7-alpine
  variables:
    PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  cache:
    paths:
      - .cache/pip
      - ci-generator/venv/
  before_script:
    - cd ci-generator
    - python -V
    - pip install virtualenv
    - virtualenv venv
    - source venv/bin/activate
    - pip install -r requirements.txt
  script:
    - coverage run -m unittest tests/test*.py
    - coverage report
    - coverage html
  coverage: '^TOTAL.*\s+(\d+\%)$'
  artifacts:
    paths:
      - ci-generator/htmlcov

image: docker:latest

variables:
  IMAGE_LABELS: >
    --label vcs-url=$CI_PROJECT_URL
    --label com.gitlab.ci.builder=$GITLAB_USER_EMAIL
    --label com.gitlab.ci.pipeline=$CI_PROJECT_URL/pipelines/$CI_PIPELINE_ID
    --label com.gitlab.ci.ref=$CI_BUILD_REF_NAME
    --label com.gitlab.ci.build=$CI_PROJECT_URL/builds/$CI_BUILD_ID
    --label com.gableroux.unity3d.version=$VERSION
    --label com.gableroux.unity3d.build=$BUILD
    --label com.gableroux.unity3d.tag=$TAG
    --label com.gableroux.unity3d.download_url=$DOWNLOAD_URL
    --label com.gableroux.unity3d.sha1=$SHA1
    --label com.gableroux.unity3d.release_notes=$RELEASE_NOTES
    --label com.gableroux.unity3d.release_url=$RELEASE_URL
  IMAGE_ARGUMENTS: >
    --build-arg DOWNLOAD_URL=$DOWNLOAD_URL
    --build-arg COMPONENTS=$COMPONENTS
    --build-arg SHA1=$SHA1

services:
  - docker:dind

before_script:
  - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY

.build-master: &build-master
  script:
    - docker build -f ${DOCKERFILE_NAME}.Dockerfile $IMAGE_LABELS --label build-date=`date -Iseconds` $IMAGE_ARGUMENTS --pull -t "$CI_REGISTRY_IMAGE:$TAG" .
    - docker push "$CI_REGISTRY_IMAGE:$TAG"
    - |
      if [ -n "$LATEST" ]; then
        echo "Marking $CI_REGISTRY_IMAGE:$TAG as latest image"
        docker tag "$CI_REGISTRY_IMAGE:$TAG" "$CI_REGISTRY_IMAGE:latest"
        docker push "$CI_REGISTRY_IMAGE:latest"
      fi
  retry: 2
  only:
    - master

.build: &build
  script:
    - docker build -f ${DOCKERFILE_NAME}.Dockerfile $IMAGE_LABELS --label build-date=`date -Iseconds` $IMAGE_ARGUMENTS --pull -t "$CI_REGISTRY_IMAGE:$TAG-$CI_COMMIT_REF_SLUG" .
    - docker push "$CI_REGISTRY_IMAGE:$TAG-$CI_COMMIT_REF_SLUG"
  retry: 2
  except:
    - master

nothing_to_build:
  script:
    echo 'All versions are already built, skipping'