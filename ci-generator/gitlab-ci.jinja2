image: docker:latest

variables:
  COMPONENTS: Unity,Windows,Windows-Mono,Mac,Mac-Mono,WebGL
  IMAGE_LABELS: >
    --label vcs-url=$CI_PROJECT_URL
    --label com.gitlab.ci.builder=$GITLAB_USER_EMAIL
    --label com.gitlab.ci.pipeline=$CI_PROJECT_URL/pipelines/$CI_PIPELINE_ID
    --label com.gitlab.ci.ref=$CI_BUILD_REF_NAME
    --label com.gitlab.ci.build=$CI_PROJECT_URL/builds/$CI_BUILD_ID
    --label com.gableroux.unity3d.version=$VERSION
    --label com.gableroux.unity3d.build=$BUILD
    --label com.gableroux.unity3d.tag=$TAG
    --label com.gableroux.unity3d.download_url=$DOWNLOAD_URL
    --label com.gableroux.unity3d.sha1=$SHA1
    --label com.gableroux.unity3d.release_notes=$RELEASE_NOTES
    --label com.gableroux.unity3d.release_url=$RELEASE_URL
  IMAGE_ARGUMENTS: >
    --build-arg DOWNLOAD_URL=$DOWNLOAD_URL
    --build-arg COMPONENTS=$COMPONENTS

services:
  - docker:dind

before_script:
  - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY

.build-master: &build-master
  stage: build
  script:
    - docker build $IMAGE_LABELS --label build-date=`date -Iseconds` $IMAGE_ARGUMENTS --pull -t "$CI_REGISTRY_IMAGE:$TAG" .
    - docker push "$CI_REGISTRY_IMAGE:$TAG"
  retry: 2
  only:
    - master

.build: &build
  stage: build
  script:
    - docker build $IMAGE_LABELS --label build-date=`date -Iseconds` $IMAGE_ARGUMENTS --pull -t "$CI_REGISTRY_IMAGE:$TAG-$CI_COMMIT_REF_SLUG" .
    - docker push "$CI_REGISTRY_IMAGE:$TAG-$CI_COMMIT_REF_SLUG"
  retry: 2
  except:
    - master

.build-unitysetup-master: &build-unitysetup-master
  stage: build
  script:
    - docker build -f unitysetup.Dockerfile $IMAGE_LABELS --label build-date=`date -Iseconds` $IMAGE_ARGUMENTS --pull -t "$CI_REGISTRY_IMAGE:$TAG" .
    - docker push "$CI_REGISTRY_IMAGE:$TAG"
    - |
      if [ -n "$LATEST" ]; then
        echo "Marking $CI_REGISTRY_IMAGE:$TAG as latest image"
        docker tag "$CI_REGISTRY_IMAGE:$TAG" "$CI_REGISTRY_IMAGE:latest"
        docker push "$CI_REGISTRY_IMAGE:latest"
      fi
  retry: 2
  only:
    - master

.build-unitysetup: &build-unitysetup
  stage: build
  script:
    - docker build -f unitysetup.Dockerfile $IMAGE_LABELS --label build-date=`date -Iseconds` $IMAGE_ARGUMENTS --pull -t "$CI_REGISTRY_IMAGE:$TAG-$CI_COMMIT_REF_SLUG" .
    - docker push "$CI_REGISTRY_IMAGE:$TAG-$CI_COMMIT_REF_SLUG"
  retry: 2
  except:
    - master

{%- if not versions.items() %}
nothing_to_build:
  stage: build
  script:
    echo 'All versions are already built, skipping'
{%- else %}
{%- for version_key, version in versions.items() %}
{#- main build #}
.unity_{{version.underscore}}: &unity_{{version.underscore}}
  variables:
    VERSION: {{version.version}}
    BUILD: {{version.build}}
    TAG: {{version_key}}
    DOWNLOAD_URL: {{version.download_url}}
    {% if version.sha1 %}SHA1: {{version.sha1}}{% endif %}
    {% if version.release_notes %}RELEASE_NOTES: {{version.release_notes}}{% endif %}
    {% if version.release_url %}RELEASE_URL: {{version.release_url}}{% endif %}
    {% if version.latest %}LATEST: 1{% endif %}

build unity_{{version.underscore}}:
  <<: *unity_{{version.underscore}}
  <<: *build-unitysetup

build-master unity_{{version.underscore}}:
  <<: *unity_{{version.underscore}}
  {%- if version.legacy %}
  <<: *build-master
  {% else %}
  <<: *build-unitysetup-master
  {% endif %}

{#- component specific #}
{%- if not version.legacy %}
{%- for component_key, component in components.items() %}
.unity_{{version.underscore}}-unity: &unity_{{version.underscore}}-{{component_key}}
  variables:
    VERSION: {{version.version}}
    BUILD: {{version.build}}
    TAG: {{version_key}}-{{component_key}}
    COMPONENTS: {{component}}
    DOWNLOAD_URL: {{version.download_url}}
    {% if version.sha1 %}SHA1: {{version.sha1}}{% endif %}
    {% if version.release_notes %}RELEASE_NOTES: {{version.release_notes}}{% endif %}
    {% if version.release_url %}RELEASE_URL: {{version.release_url}}{% endif %}

build unity_{{version.underscore}}-{{component_key}}:
  <<: *unity_{{version.underscore}}-{{component_key}}
  <<: *build-unitysetup

build-master unity_{{version.underscore}}-{{component_key}}:
  <<: *unity_{{version.underscore}}-{{component_key}}
  <<: *build-unitysetup-master
{% endfor %}
{% endif %}
{% endfor %}
{% endif %}